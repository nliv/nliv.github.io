import{_ as e,o as i,c as o,d as c}from"./app-082ad1fe.js";const l={},d=c(`<h2 id="_1-声明符" tabindex="-1"><a class="header-anchor" href="#_1-声明符" aria-hidden="true">#</a> 1. 声明符 <code>#&gt;</code></h2><ul><li><p>别名：<code>obj</code>, <code>var</code></p></li><li><p>用途：声明一/多个对象。</p></li><li><p>用法：<code>#&gt; NAME[ATTRIBUTE]::TYPE ((:= or $= or =) VALUE) (, ...); or TYPE NAME[ATTRIBUTE] ((:= or $= or =) VALUE) (, ...);</code></p><ul><li><p><code>NAME</code>：对象的名字。</p></li><li><p><code>ATTRIBUTE</code>：对象的属性，如传入类型参数、指定作用域、声明类型（冗余用法）等。</p></li><li><p><code>TYPE</code>：对象的类型。</p></li><li><p><code>(:= or $= or =)</code>（可选）：声明时采用的声明运算符，<code>:=</code> 表示仅传递值，<code>$=</code> 表示传递引用（左值右值均可），<code>=</code> 表示采用默认方式。</p></li><li><p><code>VALUE</code>（可选）：给对象赋的值。</p></li></ul></li><li><p>例子：</p></li></ul><div class="language-nliv line-numbers-mode" data-ext="nliv"><pre class="language-nliv"><code>#&gt; $txt[:father]::string := &quot;nliv now living lively&quot;, cnt[scope: global]::number := 0, $cntcpy[argu: [byte: &gt;64]]::[int,num] $= @cnt..
arr a[argu: [len: 10, type: [0: string, 1~5: int, 6~8: byte, 9: boolean]]] = {\`ok.\`, 1, 2, 3, 4, 5, B::byte, 00110101::byte, 14, maybe};
obj s = {g in Int[0~10] | g % 2 is 0}; &#39;&#39;s is a set which is {0, 2, 4, 6, 8, 10}.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-消息发送符" tabindex="-1"><a class="header-anchor" href="#_2-消息发送符" aria-hidden="true">#</a> 2. 消息发送符 <code>[]</code></h2><ul><li><p>别名：无</p></li><li><p>用途：将一条消息发送给指定对象，若无指定对象则发给全局域。</p></li></ul>`,5),n=[d];function t(a,r){return i(),o("div",null,n)}const p=e(l,[["render",t],["__file","introduce.html.vue"]]);export{p as default};
